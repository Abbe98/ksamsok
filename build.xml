<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="ksamsok" basedir="." default="RAA-RPM">

    <description>
        Ant-byggfil, ksamsok.
    </description>

    <target name="init">
        <tstamp/>
        <property environment="env"/>

        <property file="local.properties"/>

        <property name="project.build.dir" value="${basedir}/build"/>

        <property name="project.name" value="ksamsok"/>
        <property name="project.version" value="${DSTAMP}"/>
        <property name="project.src.dir" value="${basedir}/src"/>
        <property name="project.src.lib.dir" value="${basedir}/lib"/>
        <property name="jar.name"
            value="${project.name}-${project.version}.jar"/>
        <property name="war.name"
            value="${project.name}-${project.version}.war"/>
        <property name="short.war.name"
            value="${project.name}.war"/>

        <!-- för rpm, öka vid ny version... -->
		<property name="major.minor" 	value="0.2" />
		<property name="release" 		value="1" />

        <property name="javac.debug" value="true"/>
        <property name="javac.optimize" value="true"/>

        <path id="project.classpath">
            <fileset dir="${project.src.lib.dir}">
                <include name="*.jar"/>
            </fileset>
        </path>

        <fileset id="deploy.jars" dir="${project.src.lib.dir}">
            <patternset id="deploy.jars.pattern" />
        </fileset>

		<!-- Konfigurationsfiler -->
        <patternset id="conf.files">
            <include name="**/*.properties"/>
            <include name="**/*.xml"/>
        	<include name="**/*.sh"/>
            <include name="**/*.dtd"/>
            <!--  snowball/lucene, stopp-ordsfiler -->
            <include name="**/*_stop.txt"/>
            <!-- uri till namnuppslagning -->
            <include name="**/*.rdf"/>
        	<include name="**/*.xsd"/>
        </patternset>

        <mkdir dir="${project.build.dir}"/>
		<mkdir dir="${project.build.dir}/lib"/>
		<mkdir dir="${project.build.dir}/war"/>
    </target>

    <target name="compile" depends="init"
		description="Kompilerar java-klasser.">
        <javac srcdir="${project.src.dir}"
            destdir="${project.build.dir}"
            classpathref="project.classpath"
            debug="${javac.debug}" 
            optimize="${javac.optimize}"
            encoding="ISO-8859-1">
            <patternset>
                <include name="**/*.java"/>
            	<exclude name="**/*Test.java"/>
            </patternset>

        </javac>
    </target>

	<!-- Bygger en JAR -->
	<target name="jar" depends="init,compile,conf-copy"
		description="Skapar en JAR.">
		<jar jarfile="${project.build.dir}/lib/${jar.name}"
			basedir="${project.build.dir}"
			update="false" duplicate="preserve" index="true">
			<patternset>
				<include name="**/*.class"/>
				<include name="**/*.xsd"/>
			</patternset>
			<patternset refid="conf.files"/>
		</jar>
	</target>

	<target name="prepare-war-slave" if="ksamsok.slave">
		<echo> Patchar katalogstruktur för replikeringsslav </echo>
		<!-- bort med admin och skriv över konf-filer med "slav-versioner" -->
		<delete dir="${project.build.dir}/web/userAdmin" verbose="true" />
		<delete dir="${project.build.dir}/web/admin" verbose="true" />
		<copy overwrite="true" file="${basedir}/web/WEB-INF/slave.web.xml" tofile="${project.build.dir}/web/WEB-INF/web.xml" verbose="true"/>
		<copy overwrite="true" file="${basedir}/web/WEB-INF/slave.applicationContext.xml" tofile="${project.build.dir}/web/WEB-INF/applicationContext.xml" verbose="true"/>
	</target>

	<target name="prepare-war">
		<!-- kopiera men ta inte med slavkonf, den kommer ev med i senare steg -->
		<copy todir="${project.build.dir}/web">
			<fileset dir="${basedir}/web">
				<exclude name="WEB-INF/slave.web.xml" />
				<exclude name="WEB-INF/slave.applicationContext.xml" />
			</fileset>
		</copy>
	</target>

	<!-- Bygger en WAR -->
	<target name="war" depends="jar,prepare-war,prepare-war-slave" description="Skapar en WAR för deployment.">
		<war excludes="**/web.xml" basedir="${project.build.dir}/web" destfile="${project.build.dir}/war/${war.name}" webxml="${project.build.dir}/web/WEB-INF/web.xml">
			<lib dir="${project.build.dir}/lib">
				<include name="${jar.name}" />
			</lib>
			<lib dir="${project.src.lib.dir}">
				<include name="*.jar" />
				<exclude name="servlet-*.jar" />
				<exclude name="postgresql-9.0-801.jdbc4.jar" />
				<!-- oracle-filer måste läggas i tomcat/lib och kan ej vara med
				      i war-filen pga diverse klassladdarproblem -->
				<exclude name="ora10-*.jar" />
				<exclude name="oracle-*.jar" />
			</lib>			
		</war>
		<copy file="${project.build.dir}/war/${war.name}" tofile="${project.build.dir}/war/${short.war.name}"/>
	</target>

	<target name="conf-copy" depends="init">
        <copy todir="${project.build.dir}">
            <fileset dir="${project.src.dir}">
                <patternset refid="conf.files"/>
            </fileset>
        </copy>
    </target>

    <target name="build" depends="init" description="Bygger.">
        <antcall target="compile"/>
        <antcall target="conf-copy"/>
    </target>

    <target name="clean" depends="init"
        description="Tar bort build-katalogen.">
        <delete includeemptydirs="true" >
            <fileset dir="${project.build.dir}">
                <patternset>
                    <include name="**"/>
                </patternset>
            </fileset>
        </delete>
    </target>

    <target name="javadoc" depends="init"
		description="Genererar javadoc.">
        <javadoc sourcepath="${project.src.dir}"
        	classpathref="project.classpath"
            destdir="${project.build.dir}/javadoc"
            packagenames="se.raa.ksamsok.*"
            defaultexcludes="yes"
            windowtitle="K-samsök"
            access="package"
            use="true"
            >
        </javadoc>
    </target>

	<target name="master">
		<!-- notera att denna bör vara samma som för ksamsok-solr då den här strängen används i paketdeps -->
		<property name="ksamsok.replication.rpm.suffix" value="master" />
	</target>

	<target name="slave">
		<!-- flagga att vi bygger en replikeringslav med bara api-funktioner, triggar specialhantering -->
		<property name="ksamsok.slave" value="true" />
		<!-- notera att denna bör vara samma som för ksamsok-solr då den här strängen används i paketdeps -->
		<property name="ksamsok.replication.rpm.suffix" value="slave" />
	</target>

	<target name="base-RAA-RPM" depends="war">

		<!-- skapa RPM-struktur -->
		<mkdir dir="${project.build.dir}/rpm/RPMS" />
		<mkdir dir="${project.build.dir}/rpm/SPECS" />
		<mkdir dir="${project.build.dir}/rpm/SOURCES" />
		<mkdir dir="${project.build.dir}/rpm/BUILD" />
		<mkdir dir="${project.build.dir}/rpm/SRPMS" />
		<mkdir dir="${project.build.dir}/rpm/INSTALL" />

		<copy todir="${project.build.dir}/rpm/SPECS" file="rpm/ksamsok.spec">
			<filterset>
				<filter token="RPM_SUFFIX" value="${ksamsok.replication.rpm.suffix}"/>
			</filterset>
		</copy>

		<!-- kopiera in så som det ska se ut sen efter installation -->
		<copy todir="${project.build.dir}/rpm/SOURCES/">
			<fileset dir="${project.build.dir}/war">
				<include name="ksamsok.war"/>
			</fileset>
		</copy>
		<copy todir="${project.build.dir}/rpm/SOURCES/">
			<fileset dir="rpm">
				<!-- <include name="context.xml"/>  -->
				<include name="tomcat-users.xml"/>
				<include name="catalina.sh"/>
			</fileset>
		</copy>
		<copy todir="${project.build.dir}/rpm/SOURCES/">
			<fileset dir="${project.src.lib.dir}">
				<!-- obs, se till att ha samma matchningar här som i spec-filen -->
				<include name="postgresql-9.0-801.jdbc4.jar"/>
				<include name="oracle-*"/>
				<include name="ora10-*"/>
				<include name="jstl.jar"/>
				<include name="standard.jar"/>
			</fileset>
		</copy>

		<!-- Skapa själva rpm filen -->
			    	<echo message="${project.build.dir}"/>
					<rpm
					        specFile="ksamsok.spec"
					        topDir="${project.build.dir}/rpm"
					        cleanBuildDir="true"
					        failOnError="true"/>
			    	
			    	
			    	<!-- Lägg upp rpm-filen i ${project.build.rpm.dir} -->
			    	<copy todir="${project.build.dir}/rpm">
			    		<fileset dir="${project.build.dir}/rpm/RPMS/x86_64">
			    	    	<include name="*.rpm"/>
			    	    </fileset>
			    	</copy>
			    	
	</target>

	<!-- Här avgörs om man bygger en master eller slav -->
	<target name="RAA-RPM" depends="master,base-RAA-RPM" description="Skapa rpm för raä:s driftmiljö">
	</target>
	
	<!-- <target name="RAA-RPM" depends="slave,base-RAA-RPM" description="Skapa rpm för raä:s driftmiljö (slav)">
	</target> -->

</project>
